[metadata]
name = jupyter-o2
version = attr: jupyter_o2.version
author = Aaron Kollasch
author_email = aaron@kollasch.dev
description = Run Jupyter on Orchestra 2
long_description = file: README.rst, CHANGES.rst
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/aaronkollasch/jupyter-o2
license = MIT
license_file = LICENSE
keywords = jupyter, remote, ssh, slurm, pexpect, orchestra, o2
platforms = any
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: System Administrators
    Intended Audience :: Science/Research
    Environment :: Console
    Operating System :: MacOS :: MacOS X
    Operating System :: POSIX
    Topic :: Utilities
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10

[options]
setup_requires =
    setuptools_scm
    setuptools_scm_git_archive
install_requires =
    pexpect>=4.5
    dnspython>=2.0
    pyobjc-framework-Quartz>=4; platform_system=="Darwin"
python_requires = >=3.6
package_dir =
    = src
packages = find:
include_package_data = True

[options.packages.find]
where = src
exclude =
    tests

[options.entry_points]
console_scripts =
    jupyter-o2 = jupyter_o2:main

[options.extras_require]
test =
    tox
    pytest
    coverage

[bdist_wheel]
universal = 1

[tox:tox]
envlist = linters, twine, py38, py39, py310, coverage-report
isolated_build = True

[gh-actions]
python =
    3.8: py38
    3.9: py39, linters
    3.10: py310

[testenv]
# install pytest in the virtualenv where commands will be executed
deps =
    pytest
    pytest-datafiles
    coverage
;install_command = pip install --no-compile {opts} {packages}
allowlist_externals = coverage
commands =
    coverage run -m pytest

[testenv:linters]
deps =
    black
    flake8
    flake8-black
commands =
    black --check --diff .
    flake8 --count src tests

[testenv:twine]
deps =
    build>=0.4.0
    twine>=3.4.1
skip_install = true
commands =
    python -m build --sdist --wheel .
    python -m twine check dist/*

[testenv:coverage-report]
deps = coverage[toml]
skip_install = true
parallel_show_output = true
allowlist_externals = coverage
depends =
    py38
    py39
    py310
commands =
    coverage combine
    coverage report

[flake8]
max-line-length = 88
ignore =
per-file-ignores = __init__.py:F401
extend-ignore =
# See https://github.com/PyCQA/pycodestyle/issues/373
    E203,W503
exclude = .*/, build, __pycache__, *.egg

[coverage:run]
branch = True
parallel = True
source = jupyter_o2
omit =
    */__main__.py

[coverage:paths]
source =
    src
    .tox/*/site-packages

[coverage:report]
show_missing = true
skip_covered = true
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
# typing-related code
    ^if (False|TYPE_CHECKING):
    : \\.\\.\\.$
    ^ +\\.\\.\\.$
    -> ['\"]?NoReturn['\"]?:
